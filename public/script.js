document.addEventListener('DOMContentLoaded', () => {
    // === PH·∫¶N 0 & 1: L·∫§Y TOKEN V√Ä C√ÅC PH·∫¶N T·ª¨ HTML ===
    const token = localStorage.getItem('token');
    if (!token) { window.location.href = '/login.html'; return; }

    const taskForm = document.getElementById('add-task-form');
    // ... c√°c bi·∫øn const kh√°c kh√¥ng ƒë·ªïi ...
    const logoutBtn = document.getElementById('logout-btn');
    const enableNotificationsBtn = document.getElementById('enable-notifications-btn'); // N√∫t m·ªõi
    const taskModal = document.getElementById('task-due-modal');
    // ... c√°c bi·∫øn const modal kh√°c kh√¥ng ƒë·ªïi ...
    
    const API_URL = '/api/tasks';
    let localTasks = [];
    let notificationIntervalId = null; // Bi·∫øn ƒë·ªÉ gi·ªØ ID c·ªßa b·ªô ƒë·∫øm gi·ªù

    // === C√ÅC H√ÄM T·ª™ PH·∫¶N 2 ƒê·∫æN 6 KH√îNG THAY ƒê·ªîI ===
    // displayTasks, fetchTasks, event listener cho form, taskList, v.v...
    // Em h√£y copy v√† d√°n ƒë·∫ßy ƒë·ªß c√°c h√†m n√†y t·ª´ file c≈© c·ªßa m√¨nh v√†o ƒë√¢y.
    // ...

    // === PH·∫¶N 7: LOGIC TH√îNG B√ÅO & MODAL (ƒê√É C·∫¨P NH·∫¨T) ===
    function openModal(taskTitle) { /* ... code kh√¥ng ƒë·ªïi ... */ }
    function closeModal() { /* ... code kh√¥ng ƒë·ªïi ... */ }
    closeModalBtn.addEventListener('click', closeModal);
    window.addEventListener('click', (event) => { /* ... code kh√¥ng ƒë·ªïi ... */ });

    function checkTasksForNotification() { /* ... code kh√¥ng ƒë·ªïi ... */ }

    // C·∫¨P NH·∫¨T: H√†m kh·ªüi t·∫°o, ch·ªâ ch·∫°y b·ªô ƒë·∫øm n·∫øu ƒë√£ c√≥ quy·ªÅn
    function initializeNotifications() {
        console.log('Ki·ªÉm tra quy·ªÅn th√¥ng b√°o...');
        // N·∫øu ƒë√£ c√≥ quy·ªÅn, b·∫≠t b·ªô ƒë·∫øm gi·ªù ngay l·∫≠p t·ª©c
        if (Notification.permission === 'granted') {
            console.log('ƒê√£ c√≥ quy·ªÅn! B·∫Øt ƒë·∫ßu ki·ªÉm tra nhi·ªám v·ª•.');
            enableNotificationsBtn.textContent = 'Th√¥ng b√°o ƒë√£ b·∫≠t ‚úÖ';
            enableNotificationsBtn.disabled = true;
            // X√≥a b·ªô ƒë·∫øm c≈© n·∫øu c√≥ v√† t·∫°o b·ªô ƒë·∫øm m·ªõi
            if (notificationIntervalId) clearInterval(notificationIntervalId);
            notificationIntervalId = setInterval(checkTasksForNotification, 60000);
        } else if (Notification.permission === 'denied') {
            console.log('Quy·ªÅn th√¥ng b√°o ƒë√£ b·ªã ch·∫∑n.');
            enableNotificationsBtn.textContent = 'Th√¥ng b√°o ƒë√£ b·ªã ch·∫∑n üö´';
            enableNotificationsBtn.disabled = true;
        } else {
            console.log('Ch∆∞a c√≥ quy·ªÅn, ƒëang ch·ªù ng∆∞·ªùi d√πng nh·∫•n n√∫t.');
        }
    }
    
    // C·∫¨P NH·∫¨T: Th√™m s·ª± ki·ªán click cho n√∫t "B·∫≠t th√¥ng b√°o"
    enableNotificationsBtn.addEventListener('click', () => {
        // H·ªèi xin quy·ªÅn khi ng∆∞·ªùi d√πng nh·∫•n n√∫t
        Notification.requestPermission().then(permission => {
            if (permission === 'granted') {
                console.log('Ng∆∞·ªùi d√πng ƒë√£ c·∫•p quy·ªÅn!');
                // Sau khi c√≥ quy·ªÅn, g·ªçi l·∫°i h√†m kh·ªüi t·∫°o ƒë·ªÉ b·∫≠t b·ªô ƒë·∫øm
                initializeNotifications(); 
            } else {
                console.log('Ng∆∞·ªùi d√πng kh√¥ng c·∫•p quy·ªÅn.');
            }
        });
    });

    // === PH·∫¶N CU·ªêI: KH·ªûI CH·∫†Y BAN ƒê·∫¶U ===
    fetchTasks();
    initializeNotifications(); // G·ªçi h√†m n√†y ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i quy·ªÅn hi·ªán t·∫°i
});

// C√ÅC H√ÄM H·ªñ TR·ª¢ B√äN NGO√ÄI (Kh√¥ng ƒë·ªïi)
function showNotification(taskTitle, type) { /* ... */ }
function markAsNotified(taskId, type) { /* ... */ }
function hasBeenNotified(taskId, type) { /* ... */ }